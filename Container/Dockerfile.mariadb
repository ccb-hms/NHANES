# experiment with getting a functional interactive environment with R installed in 
# a standard mariadb columnstore container

# Here is a simple example of bulding, running and interacting with the container:

# docker build --progress plain --tag mariadb-test -f Container/Dockerfile.mariadb .

# docker \
#     run \
#         -d \
#         --rm \
#         -p 2200:22 \
#         -p 3306:3306 \
#         --shm-size=512m \
#         -e PM1=mcs1 \
#         --hostname=mcs1 \
#         --name mcs1 \
#         -e 'CONTAINER_USER_USERNAME=test' \
#         -e 'CONTAINER_USER_PASSWORD=test' \
#         mariadb-test

# ssh test@127.0.0.1 -p 2200 -Y -o GlobalKnownHostsFile=/dev/null -o UserKnownHostsFile=/dev/null

# this just extends the MariaDB container, so the default credntials should work: admin:C0lumnStore!
# to log in to the database

# mariadb -h 127.0.0.1 -P 3306 -u admin -p'C0lumnStore!'

# CREATE DATABASE analytics;

# this throws an error if `provision` has not already been run
# CREATE TABLE analytics.appointments(
#     id BIGINT UNSIGNED NOT NULL,
#     name VARCHAR(200) NOT NULL,
#     phone_number VARCHAR(15) NOT NULL,
#     email VARCHAR(254) NOT NULL,
#     time DATETIME NOT NULL,
#     reason VARCHAR(15) NOT NULL,
#     status VARCHAR(10) NOT NULL,
#     doctor_id BIGINT UNSIGNED NOT NULL
# ) ENGINE=ColumnStore;


# CREATE TABLE analytics.T1(
#     id BIGINT UNSIGNED NOT NULL
# ) ENGINE=ColumnStore;

# INSERT INTO analytics.T1 VALUES (123);
# INSERT INTO analytics.T1 VALUES (456);
# INSERT INTO analytics.T1 VALUES (780);

# SELECT * FROM analytics.T1;

# and from R (after running the above):
# cn = RMariaDB::dbConnect(RMariaDB::MariaDB(), dbname="analytics", username="admin", password="C0lumnStore!", host="localhost")
# DBI::dbGetQuery(cn, "SELECT * FROM analytics.T1")

FROM mariadb/columnstore

#------------------------------------------------------------------------------
# Configure the system
#------------------------------------------------------------------------------

# install sshd
RUN dnf -y install openssh-server openssh-clients; \
    sed -i 's/^\(UsePAM yes\)/# \1/' /etc/ssh/sshd_config; \
    ssh-keygen -q -t rsa -b 2048 -f /etc/ssh/ssh_host_rsa_key -N '' && \
    ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N '' && \
    ssh-keygen -t dsa -f /etc/ssh/ssh_host_ed25519_key  -N ''; \
    dnf clean all;
EXPOSE 22

# copy startup script
RUN mkdir /startup
COPY Container/startup.sh /startup/startup.sh
RUN chmod 700 /startup/startup.sh

# install system libraries

RUN dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
    dnf config-manager --set-enabled powertools

# install unixODBC
RUN dnf makecache && \
    dnf -y install \ 
        unixODBC-devel  \
        mariadb-connector-odbc

# additional libraries to support the R environment
RUN dnf makecache && \
    dnf -y install \ 
        openssl-devel  \
        libxml2-devel  \
        libcurl-devel  \
        harfbuzz-devel \
        fribidi-devel \
        freetype-devel \
        libpng-devel \
        libtiff-devel \
        libjpeg-devel \
        libgit2-devel \
        mysql-devel


#------------------------------------------------------------------------------
# Install R and packages
#------------------------------------------------------------------------------

ENV R_VERSION=4.3.3
RUN dnf -y install R-${R_VERSION}
    
ENV R_HOME=/usr/lib64/R

# enable multithreaded build for R packages
RUN echo 'options(Ncpus = max(c(parallel::detectCores()-1, 1)))' >> $R_HOME/etc/Rprofile.site

# set CRAN repository snapshot for standard package installs
ENV R_REPOSITORY=https://packagemanager.posit.co/cran/__linux__/centos8/2024-03-20
RUN echo "options(repos = c(CRAN = \"$R_REPOSITORY\"))" >> $R_HOME/etc/Rprofile.site

# use the remotes package to manage installations
RUN Rscript -e "install.packages('remotes')"

# install packages required for ETL process
RUN \
    Rscript -e "remotes::install_cran('dplyr')" \
    && Rscript -e "remotes::install_cran('devtools')" \
    && Rscript -e "devtools::install_github('cjendres1/nhanes@97f1850')" \
    && Rscript -e "remotes::install_cran('DBI')" \
    && Rscript -e "remotes::install_cran('RMariaDB')" \
    && Rscript -e "remotes::install_cran('optparse')"
    
ENTRYPOINT ["/startup/startup.sh"]